<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_simple_1_1_whatever" kind="class" language="C++" prot="public">
    <compoundname>Simple::Whatever</compoundname>
    <includes refid="simple_8h" local="no">simple.h</includes>
    <templateparamlist>
      <param>
        <type>typename T1</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_simple_1_1_whatever_1abce1dc1f1c9abb23a8075d4553faacdb" prot="public" static="no">
        <type>MyInt</type>
        <definition>typedef MyInt Simple::Whatever&lt; T1 &gt;::int</definition>
        <argsstring></argsstring>
        <name>int</name>
        <briefdescription>
<para>public typedef </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.h" line="16" column="1" bodyfile="simple.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_simple_1_1_whatever_1aa52871207b26a1ff6b00e94c45973fab" prot="private" static="no" mutable="no">
        <type><ref refid="class_simple_1_1_whatever_1abce1dc1f1c9abb23a8075d4553faacdb" kindref="member">int</ref></type>
        <definition>int Simple::Whatever&lt; T1 &gt;::member</definition>
        <argsstring></argsstring>
        <name>member</name>
        <briefdescription>
<para>member documentation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.h" line="32" column="1" bodyfile="simple.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_simple_1_1_whatever_1a3440326b57762966a6115519b96d5664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Simple::Whatever&lt; T1 &gt;::Whatever</definition>
        <argsstring>()</argsstring>
        <name>Whatever</name>
        <briefdescription>
<para>the trivial constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_simple_1_1_whatever_1ae67f8353645106fc7b5c2d9d7513d6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Simple::Whatever&lt; T1 &gt;::Whatever</definition>
        <argsstring>(float f)</argsstring>
        <name>Whatever</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>different constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_simple_1_1_whatever_1aa2bfa90b38bbc8ad7d77447f013ad011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Simple::Whatever&lt; T1 &gt;::visible</definition>
        <argsstring>(std::string s)</argsstring>
        <name>visible</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>visible method </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.h" line="25" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_simple_1_1_whatever_1a834e0cecbdeb77b81d3bf88a031a2891" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_simple_1_1_whatever_1abce1dc1f1c9abb23a8075d4553faacdb" kindref="member">int</ref></type>
        <definition>int Simple::Whatever&lt; T1 &gt;::hidden</definition>
        <argsstring>() const </argsstring>
        <name>hidden</name>
        <briefdescription>
<para>a hidden private method </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="simple.h" line="29" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Does something. </para>    </briefdescription>
    <detaileddescription>
<para>In detail the <ref refid="class_simple_1_1_whatever" kindref="compound">Whatever</ref> class still doesn&apos;t do anything useful</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T1</parametername>
</parameternamelist>
<parameterdescription>
<para>fulfills the concept of a type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="simple.h" line="13" column="1" bodyfile="simple.h" bodystart="13" bodyend="33"/>
    <listofallmembers>
      <member refid="class_simple_1_1_whatever_1a834e0cecbdeb77b81d3bf88a031a2891" prot="private" virt="non-virtual"><scope>Simple::Whatever</scope><name>hidden</name></member>
      <member refid="class_simple_1_1_whatever_1abce1dc1f1c9abb23a8075d4553faacdb" prot="public" virt="non-virtual"><scope>Simple::Whatever</scope><name>int</name></member>
      <member refid="class_simple_1_1_whatever_1aa52871207b26a1ff6b00e94c45973fab" prot="private" virt="non-virtual"><scope>Simple::Whatever</scope><name>member</name></member>
      <member refid="class_simple_1_1_whatever_1aa2bfa90b38bbc8ad7d77447f013ad011" prot="public" virt="non-virtual"><scope>Simple::Whatever</scope><name>visible</name></member>
      <member refid="class_simple_1_1_whatever_1a3440326b57762966a6115519b96d5664" prot="public" virt="non-virtual"><scope>Simple::Whatever</scope><name>Whatever</name></member>
      <member refid="class_simple_1_1_whatever_1ae67f8353645106fc7b5c2d9d7513d6e4" prot="public" virt="non-virtual"><scope>Simple::Whatever</scope><name>Whatever</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
